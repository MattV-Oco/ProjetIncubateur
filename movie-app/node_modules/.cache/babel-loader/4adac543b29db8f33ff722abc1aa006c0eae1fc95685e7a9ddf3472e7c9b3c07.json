{"ast":null,"code":"var _jsxFileName = \"F:\\\\ProjetIncubateur\\\\movie-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"Navbar\";\nimport MovieList from \"MovieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.themoviedb.org/3/movie/popular?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR\").then(res => res.json()).then(data => {\n      setGenres(data.genres);\n    });\n    fetch(`${API_URL}&page=${page}`).then(res => res.json()).then(data => {\n      if (page === 1) {\n        setMovies(data.results);\n      } else {\n        setMovies(prevMovies => [...prevMovies, ...data.results]);\n      }\n    });\n  }, [page]);\n  const searchMovie = async e => {\n    e.preventDefault();\n    console.log(\"Searching\");\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=bcc4ff10c2939665232d75d8bf0ec093&query=${query}&language=fr-FR`;\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setMovies(data.results);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const changeHandler = e => {\n    setQuery(e.target.value);\n  };\n  const filterMoviesByGenre = async genreId => {\n    try {\n      const url = `https://api.themoviedb.org/3/discover/movie?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR&with_genres=${genreId}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n      setSelectedGenre(genreId);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const loadMoreMovies = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {\n      genres: genres,\n      filterMoviesByGenre: filterMoviesByGenre,\n      query: query,\n      changeHandler: changeHandler,\n      searchMovie: searchMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      loadMoreMovies: loadMoreMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"N9kRFqKLQ+X4OyPKoIzTcWtB/bo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","MovieList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","movies","setMovies","query","setQuery","genres","setGenres","selectedGenre","setSelectedGenre","page","setPage","fetch","then","res","json","data","results","prevMovies","searchMovie","e","preventDefault","console","log","url","changeHandler","target","value","filterMoviesByGenre","genreId","error","loadMoreMovies","prevPage","children","MyNavbar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/ProjetIncubateur/movie-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"Navbar\";\nimport MovieList from \"MovieList\";\n\nconst API_URL =\n  \"https://api.themoviedb.org/3/movie/popular?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setGenres(data.genres);\n      });\n\n    fetch(`${API_URL}&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (page === 1) {\n          setMovies(data.results);\n        } else {\n          setMovies((prevMovies) => [...prevMovies, ...data.results]);\n        }\n      });\n  }, [page]);\n\n  const searchMovie = async (e) => {\n    e.preventDefault();\n    console.log(\"Searching\");\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=bcc4ff10c2939665232d75d8bf0ec093&query=${query}&language=fr-FR`;\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setMovies(data.results);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const changeHandler = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const filterMoviesByGenre = async (genreId) => {\n    try {\n      const url = `https://api.themoviedb.org/3/discover/movie?api_key=a16776e77d413e17d3d48b4e780334d0&language=fr-FR&with_genres=${genreId}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n      setSelectedGenre(genreId);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const loadMoreMovies = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <>\n      <MyNavbar\n        genres={genres}\n        filterMoviesByGenre={filterMoviesByGenre}\n        query={query}\n        changeHandler={changeHandler}\n        searchMovie={searchMovie}\n      />\n      <MovieList movies={movies} loadMoreMovies={loadMoreMovies} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}